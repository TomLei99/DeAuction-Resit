{"ast":null,"code":"var _jsxFileName = \"/Users/apple/auctiondapp/src/AuctionPage/Auction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AuctionDapp.css';\nimport { Web3 } from 'web3';\nimport EnglishAuction from '../artifacts/contracts/Auction.sol/EnglishAuction.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuctionDapp = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      if (window.ethereum) {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const web3Instance = new Web3(window.ethereum);\n        const networkId = await web3Instance.eth.net.getId();\n        const contractAddress = '0x437cb27e2407a5f90920ba661d5ed7d8d58c6d38';\n        const contractInstance = new web3Instance.eth.Contract(EnglishAuction, contractAddress);\n        setContract(contractInstance);\n      }\n    };\n    initializeWeb3();\n  }, []);\n  const fetchItemsData = async () => {\n    // Replace this with your code to fetch items data from your smart contract or API\n    // For simplicity, let's assume it returns an array of objects with id, title, description, and price properties\n    return [{\n      id: 1,\n      title: 'Item 1',\n      description: 'Description 1',\n      price: 100\n    }, {\n      id: 2,\n      title: 'Item 2',\n      description: 'Description 2',\n      price: 200\n    }, {\n      id: 3,\n      title: 'Item 3',\n      description: 'Description 3',\n      price: 300\n    }];\n  };\n  const handleItemClick = item => {\n    setSelectedItem(item);\n  };\n  const renderItems = () => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => handleItemClick(item),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", item.price, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this));\n  };\n  const handleBid = async () => {\n    if (!selectedItem) {\n      return;\n    }\n    if (contract) {\n      try {\n        // Replace 'nftId' and 'value' with the appropriate values for your bid\n        const nftId = selectedItem.id;\n        const value = web3.utils.toWei(selectedItem.price.toString(), 'ether');\n\n        // Call the 'bid' function in the contract\n        await contract.methods.bid().send({\n          from: window.ethereum.selectedAddress,\n          value: value\n        });\n\n        // Refresh the item data after bidding\n        const updatedItemsData = await fetchItemsData();\n        setItems(updatedItemsData);\n        setSelectedItem(null);\n      } catch (error) {\n        console.error('Error while bidding:', error);\n      }\n    }\n  };\n  const renderSelectedItem = () => {\n    if (!selectedItem) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: \"Select an item to display details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedItem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedItem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", selectedItem.price, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBid,\n        children: \"Bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auction-dapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction Dapp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items\",\n        children: renderItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-item-container\",\n        children: renderSelectedItem()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AuctionDapp, \"q9tkL5UgyojAGbDTSaPeXiG2a4o=\");\n_c = AuctionDapp;\nexport default AuctionDapp;\nvar _c;\n$RefreshReg$(_c, \"AuctionDapp\");","map":{"version":3,"names":["React","useState","useEffect","Web3","EnglishAuction","jsxDEV","_jsxDEV","AuctionDapp","_s","items","setItems","selectedItem","setSelectedItem","contract","setContract","initializeWeb3","window","ethereum","request","method","web3Instance","networkId","eth","net","getId","contractAddress","contractInstance","Contract","fetchItemsData","id","title","description","price","handleItemClick","item","renderItems","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleBid","nftId","value","web3","utils","toWei","toString","methods","bid","send","from","selectedAddress","updatedItemsData","error","console","renderSelectedItem","_c","$RefreshReg$"],"sources":["/Users/apple/auctiondapp/src/AuctionPage/Auction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AuctionDapp.css'; \nimport {Web3} from 'web3';\nimport EnglishAuction from '../artifacts/contracts/Auction.sol/EnglishAuction.json';\n\n\nconst AuctionDapp = () => {\n  const [items, setItems] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    const initializeWeb3 = async () => {\n      if (window.ethereum) {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const web3Instance = new Web3(window.ethereum);\n        const networkId = await web3Instance.eth.net.getId();\n\n        const contractAddress = '0x437cb27e2407a5f90920ba661d5ed7d8d58c6d38';\n        const contractInstance = new web3Instance.eth.Contract(\n          EnglishAuction,\n          contractAddress\n        );\n\n        setContract(contractInstance);\n      }\n    };\n\n    initializeWeb3();\n  }, []);\n\n  const fetchItemsData = async () => {\n    // Replace this with your code to fetch items data from your smart contract or API\n    // For simplicity, let's assume it returns an array of objects with id, title, description, and price properties\n    return [\n      { id: 1, title: 'Item 1', description: 'Description 1', price: 100 },\n      { id: 2, title: 'Item 2', description: 'Description 2', price: 200 },\n      { id: 3, title: 'Item 3', description: 'Description 3', price: 300 },\n    ];\n  };\n\n  const handleItemClick = (item) => {\n    setSelectedItem(item);\n  };\n\n  const renderItems = () => {\n    return items.map((item) => (\n      <div key={item.id} className=\"item\" onClick={() => handleItemClick(item)}>\n        <h3>{item.title}</h3>\n        <p>{item.description}</p>\n        <p>Price: {item.price} ETH</p>\n      </div>\n    ));\n  };\n\n  const handleBid = async () => {\n    if (!selectedItem) {\n      return;\n    }\n\n    if (contract) {\n      try {\n        // Replace 'nftId' and 'value' with the appropriate values for your bid\n        const nftId = selectedItem.id;\n        const value = web3.utils.toWei(selectedItem.price.toString(), 'ether');\n\n        // Call the 'bid' function in the contract\n        await contract.methods.bid().send({\n          from: window.ethereum.selectedAddress,\n          value: value,\n        });\n\n        // Refresh the item data after bidding\n        const updatedItemsData = await fetchItemsData();\n        setItems(updatedItemsData);\n        setSelectedItem(null);\n      } catch (error) {\n        console.error('Error while bidding:', error);\n      }\n    }\n  };\n\n  const renderSelectedItem = () => {\n    if (!selectedItem) {\n      return <div className=\"placeholder\">Select an item to display details.</div>;\n    }\n\n    return (\n      <div className=\"selected-item\">\n        <h2>{selectedItem.title}</h2>\n        <p>{selectedItem.description}</p>\n        <p>Price: {selectedItem.price} ETH</p>\n        <button onClick={handleBid}>Bid</button>\n        {/* Add more UI components for bidding, auction status, etc. */}\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"auction-dapp\">\n      <h1>Auction Dapp</h1>\n      <div className=\"items-container\">\n        <div className=\"items\">{renderItems()}</div>\n        <div className=\"selected-item-container\">{renderSelectedItem()}</div>\n      </div>\n    </div>\n  );\n\n};\n\nexport default AuctionDapp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}